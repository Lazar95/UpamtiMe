@using Data
@model UpamtiMe.Models.EditCourseModel

@{
    ViewBag.Title = "EditCourse";
}
@{
    List<SelectListItem> categories = new List<SelectListItem>();
    foreach (var val in Enum.GetValues(typeof(Data.Enumerations.Categories)))
    {
        categories.Add(new SelectListItem
        {
            Text = Enum.GetName(typeof(Data.Enumerations.Categories), val),
            Value = ((int)val).ToString()
        });
    }
}

@{
    List<SelectListItem> subcategories = new List<SelectListItem>();
    foreach (var sub in Model.AllSubcategories)
    {
        subcategories.Add(new SelectListItem
        {
            Text = sub.name,
            Value = ((int)sub.subcategoryID).ToString()
        });
    }
}

<script src="~/Scripts/edit-course.js"></script>

<h2>EditCourse</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <ul class="course">
        @foreach (LevelsDTO level in Model.Levels)
        {
            <li>@level.Name</li>
            <ul class=="level" data-level-id=@level.LevelID>
                @foreach (CardsDTO card in level.Cards)
                {
                    <li data-card-id=@card.cardID>
                        @if (card.Question != null)
                        {
                           <span class="question">@Html.EditorFor(m=>card.Question, card.Question)</span>
                        }
                        else
                        {
                            if (card.Image != null)
                            {
                                <span class="image">@card.Image</span>
                                <div>upload dugme</div>
                            }
                        }
                        @Html.EditorFor(m => card.Answer, card.Answer)
                        <button class="add-button">Promeni</button>
                    </li>
                }
                <li>
                    Pitanje: <input type="text" /> Odgovor: <input type="text" /> <button>Dodaj!</button>
                </li>
            </ul>
        }
        <li id="new-level">
            Tip nivoa:
            <select>
                <option value="simple">simple</option>
                <option value="complex">complex</option>
                <option value="image">image</option>
            </select>
            Ime nivoa: <input type="text" /> <div class="add-button">Dodaj</div>
        </li>

    </ul>
    <div class="form-horizontal">
        <h4>EditCourseModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CourseID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubcategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubcategoryID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubcategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfCards, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfCards, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfCards, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<style>
    #new-level .add-button {
        background-color: green;
        cursor: pointer;
    }
</style>