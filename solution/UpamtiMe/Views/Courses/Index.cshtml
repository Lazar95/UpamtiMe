@model UpamtiMe.Models.CourseIndexModel

@{
    List<SelectListItem> categories = new List<SelectListItem>();
    foreach (var val in Enum.GetValues(typeof(Data.Enumerations.Categories)))
    {
        categories.Add(new SelectListItem
        {
            Text = Enum.GetName(typeof(Data.Enumerations.Categories), val),
            Value = ((int)val).ToString()
        });
    }
}

@{
    List<SelectListItem> subcategories = new List<SelectListItem>();
    foreach (var sub in Model.AllSubcategories)
    {
        subcategories.Add(new SelectListItem
        {
            Text = sub.name,
            Value = ((int)sub.subcategoryID).ToString()
        });
    }
}

<main id="courses-index">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div id="search-form">
        
            <div class="search-form-input-group">
                <span>Naizv</span>
                @Html.EditorFor(model => model.Search, new { htmlAttributes = new { @class = "search-form-input" } })
            </div>

            @*<div class="search-form-input-group">
                <span>Kategorija</span>
                @Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "search-form-input" } })
            </div>

            <div class="search-form-input-group">
                <span>Podkategorija</span>
                @Html.EditorFor(model => model.SubcategoryID, new { htmlAttributes = new { @class = "search-form-input" } })
            </div>*@

            <div id="new-course-category">
                @Html.DropDownListFor(m => m.CategoryID, categories, "Izaberi kategoriju")
            </div>

            <div id="new-course-subcategory">
                <select id="@Html.NameFor(m => m.SubcategoryID)" name="@Html.NameFor(m=>m.SubcategoryID)">
                    <option value="0">Izaberi podkategoriju</option>
                    @foreach (var subcat in Model.AllSubcategories)
                    {
                        <option hidden value="@subcat.subcategoryID" data-catID="@subcat.categoryID">@subcat.name</option>
                    }
                </select>
            </div>



            <div class="search-form-input-group search-button">
                <button type="submit" id="button-search" formmethod="get"><i class="fa fa-search"></i></button>
            </div>
        </div>
    }

    <div id="search-results-outer">
        <ul>
            @foreach (Data.DTOs.CourseDTO course in @Model.Courses)
            {
                @Helper.SearchResult(
                    Url, course.CourseID, course.Name, course.CategoryID, course.CategoryName, course.SubcategoryID, course.SubcategoryName,
                    course.Description, course.ParticipantCount, course.NumberOfCards, course.Rating, course.CreatorID, course.CreatorUsername, course.Image
                )
            }
        </ul>
    </div>
        
    <div class="more"><button @(Model.More == false ? "disabled" : "")>MORE</button></div>

</main>

<script src="~/Scripts/courses-index.js"></script>

<script type="text/javascript">
    var BlockNumber = 0; //ne => //Infinate Scroll starts from second block
    var NoMoreData = false;
    var inProgress = false;


    $('.more > button').click(function () {
        if (!inProgress) {

            inProgress = true;

            $.post("@Url.Action("InfinateScroll",
            "Courses")", { "BlockNumber": BlockNumber },
                    function (data) {

                        BlockNumber = BlockNumber + 1;
                        NoMoreData = data.NoMoreData;
                        $('#search-results-outer > ul').append(data.HTMLString);
                        if (data.NoMoreData) {
                            $('.more > button').html("NO MORE");
                            $('.more > button').attr('disabled',"");
                        }
                            
                        //$('#user-courses-always > ul').append(data.HTMLString);
                        //$("#bookListDiv").append(data.HTMLString);
                       // $("#loadingDiv").hide();
                        inProgress = false;
                    });
        }
    });
</script>

