@using Data
@using Data.DTOs
@model UpamtiMe.Models.CourseProfileModel

@{
    ViewBag.Title = "Index";
}
@{ LoginDTO user = UserSession.GetUser();}

<main id="course-profile">

    <div class="banner">
        @if (user != null && user.UserID == Model.CreatorID)
        {
            <a href="@Url.Action("EditCourse", "Courses", new { id = @Model.CourseID })">Edit</a>
        }


        <div class="picture">
                @{
                    if (Model.Image != null)
                    {
                        var base64 = Convert.ToBase64String(Model.Image.ToArray());
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        <img src="@imgSrc" width="208px" height="208px" />
                    }
                }

        </div>
        <div class="basic-info">
            <div class="course-name">@Model.Name</div>
            <div class="course-cat-subcat">
                <span class="cat" data-cat-id=@Model.CategoryID><a href="@Url.Action("Index", "Courses", new { categoryID = Model.CategoryID })">@Model.CategoryName</a></span>
                <i class="fa fa-caret-right"></i>
                <span class="subcat" data-subcat-id=@Model.SubcategoryID><a href="@Url.Action("Index", "Courses", new { subcategoryID = Model.SubcategoryID })">@Model.SubcategoryName</a></span>
            </div>
            <div class="course-description">@Model.Description</div>

        </div>
    </div>

    <div class="main-content">
        <div class="buttons">
            @if (user != null)
            {
                if (Model.Statistics == null)
                {
                    <div class="enroll-button">
                        @Html.ActionLink("Enroll", "Enroll", "Courses", new { id = Model.CourseID }, null)
                    </div>
                }
                else
                {
                    var learnLevelQuery = (from a in @Model.Levels where a.LearningStatistics.Unseen > 0 select new { id = a.LevelID, no = a.Number });
                    int learnLevel = learnLevelQuery.Any() ? learnLevelQuery.OrderBy(a => a.no).First().id : 0;
                    var reviewLevelQuery = (from a in @Model.Levels where a.LearningStatistics.Review > 0 select new {id = a.LevelID, no = a.Number});
                    int reviewLevel = reviewLevelQuery.Any() ? reviewLevelQuery.OrderBy(a => a.no).First().id : 0;

                    <div class="button button-rect learn-button">
                        <div class="btn-icon icon-id-learn"><span></span></div><span><a href="@Url.Action("Learn", new {courseID = Model.CourseID, levelID = @learnLevel})">Uči</a></span>
                    </div>
                    <div class="button button-rect review-button">
                        <div class="btn-icon icon-id-review"><span></span></div><span><a href="@Url.Action("Review", new {courseID = Model.CourseID, levelID = @reviewLevel})">Obnovi</a></span>
                    </div>
                    <div class="button button-rect overreview-button">
                        <div class="btn-icon icon-id-linky"><span></span></div><span><a href="@Url.Action("Linky", new { courseID = Model.CourseID })">Spajalica</a></span>
                    </div>
                }
            }
        </div>

        @{int index = -1;
        <ul class="levels">
            @for (int i = 0; i <= 2 * Model.Levels.Count / 9; i++)
            {
                <li class="level-group">
                    <ul>
                        @for (int j = 0; index + 1 < Model.Levels.Count && j < ((i % 2 == 0) ? 5 : 4); j++)
                        {
                            index++;
                            <li class="level level-color-id-@(Model.Levels[index].Color == 0 ? 1 : Model.Levels[index].Color)">
                                <div class="circle-display">
                                    <div class="icon icon-id-@(Model.Levels[index].Icon == 0 ? 1: Model.Levels[index].Icon)">@*level.icon; level.color*@</div>
                                    <div class="name"><span>@Model.Levels[index].Number</span>@Model.Levels[index].Name</div>
                                    <div class="pie-ring-outer">
                                        <div class="pie-ring-inner">
                                            @if (Model.Levels[index].LearningStatistics != null)
                                            {
                                                int t = Model.Levels[index].LearningStatistics.Total;
                                                t = t == 0 ? 1 : t;
                                                double tdeg = 360.0 / t;
                                                double ldeg = Model.Levels[index].LearningStatistics.Learned * tdeg;
                                                double rdeg = Model.Levels[index].LearningStatistics.Review * tdeg;
                                                double udeg = Model.Levels[index].LearningStatistics.Unseen * tdeg;
                                                int l = (int)Math.Ceiling(ldeg) == 360 ? 361 : (int)Math.Ceiling(ldeg);
                                                int r = (int)Math.Ceiling(rdeg) == 360 ? 361 : (int)Math.Ceiling(rdeg);
                                                int u = (int)Math.Ceiling(udeg) == 360 ? 361 : (int)Math.Ceiling(udeg);
                                                <div class="pie pie-learned @(l > 180 ? "big" : "")" data-start="0" data-value="@l"></div>
                                                <div class="pie pie-forgotten @(r > 180 ? "big" : "")" data-start="@l" data-value="@r"></div>
                                                <div class="pie pie-unseen @(u > 180 ? "big" : "")" data-start="@(l+r)" data-value="@u"></div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="more-info-outer">
                                    <div class="more-info-inner">

                                        <div class="session-buttons">
                                            <div class="button button-rect learn-button"><div class="btn-icon icon-id-learn"><span></span></div><span><a href="@Url.Action("Learn", new { courseID = Model.CourseID, levelID = @Model.Levels[index].LevelID})">Uči</a></span></div>
                                            <div class="button button-rect review-button"><div class="btn-icon icon-id-review"><span></span></div><span><a href="@Url.Action("Review", new { courseID = Model.CourseID, levelID = @Model.Levels[index].LevelID})">Obnovi</a></span></div>
                                            <div class="button button-rect overreview-button"><div class="btn-icon icon-id-linky"><span></span></div><span><a href="@Url.Action("Linky", new { courseID = Model.CourseID, levelID = @Model.Levels[index].LevelID})">Spajalica</a></span></div>
                                            <div class="button button-rect show-words-button"><div class="btn-icon icon-id-list"><span></span></div><span>Spisak</span></div>
                                        </div>

                                        <div class="level-info">

                                            @if (Model.Levels[index].LearningStatistics != null)
                                            {
                                            <div class="statistics">
                                                <dl class="stats stats-vertical level-total-card">
                                                    <dt>Ukupno</dt>
                                                    <dd>@Model.Levels[index].CardNumber</dd>
                                                </dl>
                                                <dl class="stats stats-vertical  level-learned-cards">
                                                    <dt>Nauceno</dt>
                                                    <dd>@Model.Levels[index].LearningStatistics.Learned</dd>
                                                </dl>
                                                <dl class="stats stats-vertical  level-review-cards">
                                                    <dt>Za obnavljanje</dt>
                                                    <dd>@Model.Levels[index].LearningStatistics.Review</dd>
                                                </dl>
                                                <dl class="stats stats-vertical  level-unseen-cards">
                                                    <dt>Neotvorenih</dt>
                                                    <dd>@Model.Levels[index].LearningStatistics.Unseen</dd>
                                                </dl>
                                            </div>

                                            <div class="words-highlight">

                                            </div>
                                            }
                                            
                                            <ul class="list-of-cards" id=@("list-of-cards-level-id-" + Model.Levels[index].LevelID)>
                                                @*@for (int c = 0; c < Model.Levels[index].CardNumber; c++)
                                                {
                                                    <li>@Model.Levels[index].</li>
                                                    Gde jke lsita kartica?
                                                }*@
                                            </ul>

                                        </div>

                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </li>
            }
        </ul>
        }
    </div>

    <aside>
        @if (Model.Statistics != null)
        {
            <div class="personal-stats">
                <dl class="stats stats-horizontal"><dt>Neotvorenih</dt><dd>@Model.Statistics.LearningStatistics.Unseen</dd></dl>
                <dl class="stats stats-horizontal"><dt>Za obnavljanje</dt><dd>@Model.Statistics.LearningStatistics.Review</dd></dl>
                <dl class="stats stats-horizontal"><dt>Nauceno</dt><dd>@Model.Statistics.LearningStatistics.Learned</dd></dl>
            </div>
        }
       

        <div class="course-stats">
            <dl class="stats stats-horizontal"><dt>Broj kartica</dt><dd>@Model.NumberOfCards</dd></dl>
            <dl class="stats stats-horizontal"><dt>Broj učesnika</dt><dd>@Model.ParticipantCount</dd></dl>
            <dl class="stats stats-horizontal"><dt>Kreator</dt><dd><a href="@Url.Action(@Model.CreatorUsername, "Profile", new { id = @Model.CreatorID })">@Model.CreatorUsername</a></dd></dl>
        </div>

        <div id="leaderboard">
            <h3>All Time</h3>
            <ul id="leaderboard-all-time">
                @foreach (LeaderboardEntryDTO lde in Model.Leaderboard.OrderBy(a => a.AllTimeScore))
                {
                    <li>
                        <div class="avatar"><i class="fa fa-refresh"></i></div>
                        <div class="username">@lde.Username</div>
                        <div class="score">@lde.AllTimeScore</div>
                    </li>
                }
                @for (int i = 0; i < 5; i++)
                {
                    // Fiktivni
                    <li>
                        <div class="avatar"><i class="fa fa-refresh"></i></div>
                        <div class="username">Fiktivni@(i)</div>
                        <div class="score">1.5</div>
                    </li>
                }
            </ul>

            <h3>This Week</h3>
            <ul id="leaderboard-this-week">
                @foreach (LeaderboardEntryDTO lde in Model.Leaderboard.OrderBy(a => a.WeekScore))
                {
                    <span>@lde.Username</span>
                    <span>@lde.WeekScore</span>
                }   
            </ul>

            <h3>This Month</h3>
            <ul id="leaderboard-this-month">
                @foreach (LeaderboardEntryDTO lde in Model.Leaderboard.OrderBy(a => a.MonthScore))
                {
                    <span>@lde.Username</span>
                    <span>@lde.MonthScore</span>
                }
            </ul>
        </div>
    </aside>

</main>

<script src="~/Scripts/course-profile.js"></script>
