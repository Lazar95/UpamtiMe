@using Data
@using Data.DTOs
@model UpamtiMe.Models.CourseProfileModel

@{
    ViewBag.Title = "Index";
}
@{ LoginDTO user = UserSession.GetUser();}

<main id="course-profile">

    <div class="course-banner">
        @Helper.Image(Model.Image, "class", "avatar")

        <div class="basic-info">
            <h1 id="course-name"><span>@Model.Name</span></h1>
            <div class="cat-subcat">
                <span class="cat" data-cat-id=@Model.CategoryID><a href="@Url.Action("Index", "Courses", new { categoryID = Model.CategoryID })">@Model.CategoryName</a></span>
                <i class="fa fa-caret-right"></i>
                <span class="subcat" data-subcat-id=@Model.SubcategoryID><a href="@Url.Action("Index", "Courses", new { subcategoryID = Model.SubcategoryID })">@Model.SubcategoryName</a></span>
            </div>

            <div id="course-description">
                <span>@Model.Description</span>
            </div>

            <div id="course-actions">
                @if (user != null && user.UserID == Model.CreatorID)
                { <a id="button-edit-course" class="button-link" href="@Url.Action("EditCourse", "Courses", new { id = @Model.CourseID })"><div class="button"><i class="fa fa-pencil"></i></div></a> }

                @if (Model.Favorite == null)
                { <a id="button-favorite" class="button-link" href="@Url.Action("Favorite", new {courseID = @Model.CourseID})"><div class="button"><i class="fa fa-heart-o"></i></div></a> }
                else
                { <a id="button-unfavorite" class="button-link" href="@Url.Action("UnFavorite", new {courseID = @Model.CourseID})"><div class="button"><i class="fa fa-heart"></i></div></a> }
            </div>
        </div>
    </div>

    <div class="main-content">
        <div class="buttons">
            @if (user != null)
            {
                if (Model.Statistics == null)
                {
                    <a id="button-enroll" class="button-link" href=@Url.Action("Enroll", new { id = Model.CourseID })>@Helper.Button("rect", "", "unlock", "Prijavi se na kurs")</a>
                }
                else
                {
                    var learnLevelQuery = (from a in @Model.Levels where a.LearningStatistics.Unseen > 0 select new { id = a.LevelID, no = a.Number });
                    int learnLevel = learnLevelQuery.Any() ? learnLevelQuery.OrderBy(a => a.no).First().id : 0;
                    var reviewLevelQuery = (from a in @Model.Levels where a.LearningStatistics.Review > 0 select new { id = a.LevelID, no = a.Number });
                    int reviewLevel = reviewLevelQuery.Any() ? reviewLevelQuery.OrderBy(a => a.no).First().id : 0;

                    <a id="button-learn" class="button-link" href=@Url.Action("Learn", new {courseID = Model.CourseID, levelID = @learnLevel})>@Helper.Button("rect", "", "graduation-cap", "Uči")</a>
                    <a id="button-review" class="button-link" href=@Url.Action("Review", new {courseID = Model.CourseID, levelID = @reviewLevel})>@Helper.Button("rect", "", "flask", "Obnovi")</a>
                    <a id="button-linky" class="button-link" href=@Url.Action("Linky", new { courseID = Model.CourseID })>@Helper.Button("rect", "", "chain", "Spajalica")</a>
                }
            }
        </div>

        @{int index = -1;
            <ul class="levels big-container">
                @for (int i = 0; i <= 2 * Model.Levels.Count / 9; i++)
            {
                    <li class="level-group">
                        <ul>
                            @for (int j = 0; index + 1 < Model.Levels.Count && j < ((i % 2 == 0) ? 5 : 4); j++)
                            {
                                index++;
                                <li class="level level-color-id-@(Model.Levels[index].Color == 0 ? 1 : Model.Levels[index].Color)">
                                    <div class="circle-display">
                                        <div class="icon icon-id-@(Model.Levels[index].Icon == 0 ? 1: Model.Levels[index].Icon)">@*level.icon; level.color*@</div>
                                        <div class="name"><span>@Model.Levels[index].Number</span>@Model.Levels[index].Name</div>
                                        <div class="pie-ring-outer">
                                            <div class="pie-ring-inner">
                                                @if (Model.Levels[index].LearningStatistics != null)
                                                {
                                                    int t = Model.Levels[index].LearningStatistics.Total;
                                                    t = t == 0 ? 1 : t;
                                                    double tdeg = 360.0 / t;
                                                    double ldeg = Model.Levels[index].LearningStatistics.Learned * tdeg;
                                                    double rdeg = Model.Levels[index].LearningStatistics.Review * tdeg;
                                                    double udeg = Model.Levels[index].LearningStatistics.Unseen * tdeg;
                                                    int l = (int)Math.Ceiling(ldeg) == 360 ? 361 : (int)Math.Ceiling(ldeg);
                                                    int r = (int)Math.Ceiling(rdeg) == 360 ? 361 : (int)Math.Ceiling(rdeg);
                                                    int u = (int)Math.Ceiling(udeg) == 360 ? 361 : (int)Math.Ceiling(udeg);
                                                    <div class="pie pie-learned @(l > 180 ? "big" : "")" data-start="0" data-value="@l"></div>
                                                    <div class="pie pie-forgotten @(r > 180 ? "big" : "")" data-start="@l" data-value="@r"></div>
                                                    <div class="pie pie-unseen @(u > 180 ? "big" : "")" data-start="@(l+r)" data-value="@u"></div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="more-info-outer">
                                        <div class="more-info-inner">

                                            <div class="session-buttons">
                                                <a class="button-level-learn button-link" href=@Url.Action("Learn", new { courseID = Model.CourseID, levelID = @Model.Levels[index].LevelID})>@Helper.Button("rect", "", "graduation-cap", "Uči")</a>
                                                <a class="button-level-review button-link" href=@Url.Action("Review", new { courseID = Model.CourseID, levelID = @Model.Levels[index].LevelID})>@Helper.Button("rect", "", "flask", "Obnovi")</a>
                                                <a class="button-level-linky button-link" href=@Url.Action("Linky", new { courseID = Model.CourseID, levelID = @Model.Levels[index].LevelID})>@Helper.Button("rect", "", "chain", "Spajalica")</a>
                                                <a class="button-level-linky button-link" href="#!">@Helper.Button("rect", "", "list", "Spisak")</a>
                                            </div>

                                            <div class="level-info">

                                                @if (Model.Levels[index].LearningStatistics != null)
                                                {
                                                    <div class="statistics">
                                                        <dl class="stats stats-vertical level-total-card">
                                                            <dt>Ukupno</dt>
                                                            <dd>@Model.Levels[index].CardNumber</dd>
                                                        </dl>
                                                        <dl class="stats stats-vertical  level-learned-cards">
                                                            <dt>Nauceno</dt>
                                                            <dd>@Model.Levels[index].LearningStatistics.Learned</dd>
                                                        </dl>
                                                        <dl class="stats stats-vertical  level-review-cards">
                                                            <dt>Za obnavljanje</dt>
                                                            <dd>@Model.Levels[index].LearningStatistics.Review</dd>
                                                        </dl>
                                                        <dl class="stats stats-vertical  level-unseen-cards">
                                                            <dt>Neotvorenih</dt>
                                                            <dd>@Model.Levels[index].LearningStatistics.Unseen</dd>
                                                        </dl>
                                                    </div>

                                                    <div class="words-highlight">

                                                    </div>
                                                }

                                                <ul class="list-of-cards" id=@("list-of-cards-level-id-" + Model.Levels[index].LevelID)>
                                                    @*@for (int c = 0; c < Model.Levels[index].CardNumber; c++)
                                                        {
                                                            <li>@Model.Levels[index].</li>
                                                            Gde jke lsita kartica?
                                                        }*@
                                                </ul>

                                            </div>

                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </li>
                }
            </ul>
        }
    </div>

    <aside>
        @if (Model.Statistics != null)
        {
            <div class="personal-stats">
                <dl class="stats stats-horizontal"><dt>Neotvorenih</dt><dd>@Model.Statistics.LearningStatistics.Unseen</dd></dl>
                <dl class="stats stats-horizontal"><dt>Za obnavljanje</dt><dd>@Model.Statistics.LearningStatistics.Review</dd></dl>
                <dl class="stats stats-horizontal"><dt>Naučeno</dt><dd>@Model.Statistics.LearningStatistics.Learned</dd></dl>
            </div>
        }


        <div class="course-stats">
            <dl class="stats stats-horizontal"><dt>Broj kartica</dt><dd>@Model.NumberOfCards</dd></dl>
            <dl class="stats stats-horizontal"><dt>Broj učesnika</dt><dd>@Model.ParticipantCount</dd></dl>
            <dl class="stats stats-horizontal"><dt>Kreator</dt><dd><a href="@Url.Action(@Model.CreatorUsername, "Profile", new { id = @Model.CreatorID })">@Model.CreatorUsername</a></dd></dl>
        </div>

        <div id="leaderboard" class="leaderboard-emphasized-top">
            @Helper.LeaderboardTabs()
            @Helper.Leaderboard("week-score", Model.Leaderboard.OrderByDescending(a => a.MonthScore).ToList(), user?.UserID, 20, Url, true)
            @Helper.Leaderboard("month-score", Model.Leaderboard.OrderByDescending(a => a.WeekScore).ToList(), user?.UserID, 20, Url, false)
            @Helper.Leaderboard("all-time-score", Model.Leaderboard.OrderByDescending(a => a.AllTimeScore).ToList(), user?.UserID, 20, Url, false)
        </div>
    </aside>

</main>

<script src="~/Scripts/course-profile.js"></script>
