@model UpamtiMe.Models.UserIndexModel
@using Data
@using Data.DTOs
@{
    ViewBag.Title = "Index";
}
@{ LoginDTO user = UserSession.GetUser();}

<main id="users-index">

    <div id="user-stats" class="big-container">
        <div id="stats-learning-history-month-wrapper">
            <canvas id="stats-learning-history-month" width="950" height="190"
                data-learned= "@Model.Statistics.Learned"
                data-reviewed="@Model.Statistics.Reviewed"
                data-dates="@Model.Statistics.Dates"
            ></canvas>
        </div>
        <div id="stats-cards-breakdown-wrapper">
            <canvas id="stats-cards-breakdown" width="140" height="140" data-learned="@Model.LearningStatistics.Learned" data-review="@Model.LearningStatistics.Review" data-unseen="@Model.LearningStatistics.Unseen"></canvas>
        </div>
        <div id="stats-points-week-wrapper">
            <canvas id="stats-points-week" width="340" height="140" data-points= "@Model.Statistics.Scores" data-dates="@Model.Statistics.Dates"></canvas>
        </div>
        <div id="stats-time-week-wrapper">
            <canvas id="stats-time-week" width="340" height="140" data-time="@Model.Statistics.Times" data-dates="@Model.Statistics.Dates"></canvas>
        </div>
        <div class="more"><i class="fa fa-arrows-alt"></i></div>
        <div class="full-screen">
            <div class="less"><i class="fa fa-times"></i></div>
            user-stas
        </div>
    </div>


    <div id="leaderboard" class="big-container">
        @Helper.LeaderboardTabs()
        @Helper.Leaderboard("all-time-score", Model.Leaderboard.OrderByDescending(a => a.AllTimeScore).ToList(), user?.UserID, 10, Url, true)
        @Helper.Leaderboard("week-score", Model.Leaderboard.OrderByDescending(a => a.MonthScore).ToList(), user?.UserID, 10, Url, false)
        @Helper.Leaderboard("month-score", Model.Leaderboard.OrderByDescending(a => a.WeekScore).ToList(), user?.UserID, 10, Url, false)
        <div class="more"><i class="fa fa-arrows-alt"></i></div>
        <div class="full-screen">
            <div class="less"><i class="fa fa-times"></i></div>
            <div class="full-leaderboard-headings">
                <h3>Ukupno</h3>
                <h3>Nedelja</h3>
                <h3>Mesec</h3>
            </div>
            @Helper.Leaderboard("all-time-score", Model.Leaderboard.OrderByDescending(a => a.AllTimeScore).ToList(), user?.UserID, null, Url, true)
            @Helper.Leaderboard("week-score", Model.Leaderboard.OrderByDescending(a => a.MonthScore).ToList(), user?.UserID, null, Url, true)
            @Helper.Leaderboard("month-score", Model.Leaderboard.OrderByDescending(a => a.WeekScore).ToList(), user?.UserID, null, Url, true)
        </div>
    </div>

    <ul id="user-courses">
        <button id="load-more-courses">More</button>
        @foreach (Data.DTOs.UserCourseDTO course in Model.Courses)
        {
            <li data-course-id=@course.CourseID>
                <div class="wrapper">
                    <div class="course-name"><a href="@Url.Action("Profile", "Courses", new { id = course.CourseID } )">@course.Name</a></div>
                    @Helper.Image(course.Image, "class", "course-picture")
                    <div class="course-buttons">
                        <div class="button button-rect learn-button">
                            <div class="btn-icon icon-id-learn"><span></span></div><span><a href="@Url.Action("Learn", "Courses", new { courseID = course.CourseID } )">Uči</a></span>
                        </div>
                        <div class="button button-rect review-button">
                            <div class="btn-icon icon-id-review"><span></span></div><span><a href="@Url.Action("Review", "Courses", new { courseID = course.CourseID } )">Obnovi</a></span>
                        </div>
                        <div class="button button-rect linky-button">
                            <div class="btn-icon icon-id-linky"><span></span></div><span><a href="@Url.Action("Linky", "Courses", new { courseID = course.CourseID } )">Spajalica</a></span>
                        </div>
                    </div>
                    <div class="course-points-graph-wrapper">
                        <canvas class="course-points-graph" width="224" height="135"
                                data-points="@course.StatisctisByDays.Scores"
                                data-dates="@course.StatisctisByDays.Dates"></canvas>
                    </div>
                    <div class="course-total-breakdown-wrapper">
                        <canvas class="course-total-breakdown" width="118" height="118"
                                data-learned="@course.LearningStatistics.LearningStatistics.Learned"
                                data-review="@course.LearningStatistics.LearningStatistics.Review"
                                data-unseen="@course.LearningStatistics.LearningStatistics.Unseen"
                        ></canvas>
                    </div>
                </div>
            </li>
        }
    </ul>

</main>


<script type="text/javascript">
    var BlockNumber = 0; //ne => //Infinate Scroll starts from second block
    var NoMoreData = false;
    var inProgress = false;


    $('#load-more-courses').click(function () {
        if (!inProgress) {

            inProgress = true;

            $.post("@Url.Action("InfinateScroll", "Users")",
                { "BlockNumber": BlockNumber },
                    function (data) {

                        BlockNumber = BlockNumber + 1;
                        NoMoreData = data.NoMoreData;
                        $('#user-courses').append(data.HTMLString);
                        if (data.NoMoreData) {
                            $('#load-more-courses').html("NO MORE");
                            $('#load-more-courses').attr('disabled', "");
                        }


                        // za svaki  kurs
                        var temp = [
                          { dataName: 'data-dates', color: "", label: "", },
                          { dataName: 'data-points', color: colorBlueGrey700, label: 'Poeni', }
                        ];
                        var min = data.min - 2;
                        var max = data.max + 1;
                        
                        var elements = $('.course-points-graph:gt('+ min +'):lt(' + max + ')'); // uzima samo prva tri jer se za njih vide grafici
                        elements.each(function () {
                            loadGraphLine($(this), temp, 7);
                        });

                        $('.course-total-breakdown:gt(' + min + '):lt(' + max + ')').each(function () {
                            loadStatsCourseTotalBreakdown($(this));
                        });

                       
                        inProgress = false;
                    });
        }
    });
</script>

<script src="~/Scripts/users-index.js"></script>

@*
    <div>

        <div id="leaderbord">
            <p>All Time</p>

            @foreach (LeaderboardEntryDTO lde in Model.Leaderboard.OrderBy(a => a.AllTimeScore))
            {
                <span>Username: @lde.Username</span>
                <span>AllTimeScore: @lde.AllTimeScore</span>
            }

            <p>This Week</p>
            @foreach (LeaderboardEntryDTO lde in Model.Leaderboard.OrderBy(a => a.WeekScore))
            {
                <span>Username: @lde.Username</span>
                <span>WeekScore: @lde.WeekScore</span>
            }

            <p>This Month</p>
            @foreach (LeaderboardEntryDTO lde in Model.Leaderboard.OrderBy(a => a.MonthScore))
            {
                <span>Username: @lde.Username</span>
                <span>MonthScore: @lde.MonthScore</span>
            }
        </div>

        <div id="courses">
            @foreach (UserCourseDTO ucd in Model.Courses)
            {
                <span>@ucd.Name</span>
                <span>@Enum.GetName(typeof (Enumerations.Categories), ucd.CategoryID)</span>
                if (ucd.SubcategoryID != null)
                {
                    //ovo treba da se izmeni, da bude string direktno u modelu
                    <span>@Courses.getSubcategoryName((int) ucd.SubcategoryID)</span>
                }
                <br/>
                <span>Statistics: Learned/Total/Review</span>
                <span>@ucd.LearningStatistics.Learned</span>
                <span>@ucd.LearningStatistics.Review</span>
                <span>@ucd.LearningStatistics.Total</span>
            }
        </div>

        // dugmici: view profile, edit profile, napravi kurs (mozemo i ko na memrajzu da imamo posebnu stranicu za kurseve) nzm sta jos

    </div>
*@